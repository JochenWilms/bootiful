{"ast":null,"code":"import _defineProperty from \"/home/jochen/theglue/clientbootiful/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/jochen/theglue/clientbootiful/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jochen/theglue/clientbootiful/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jochen/theglue/clientbootiful/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jochen/theglue/clientbootiful/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jochen/theglue/clientbootiful/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jochen/theglue/clientbootiful/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jochen/theglue/clientbootiful/src/beer/BeerAdd.js\";\nimport * as React from 'react';\n\nvar BeerAdd =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BeerAdd, _React$Component);\n\n  function BeerAdd(props) {\n    var _this;\n\n    _classCallCheck(this, BeerAdd);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BeerAdd).call(this, props));\n    _this.state = {\n      name: '',\n      isGood: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BeerAdd, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var name = event.target.name;\n      var value = event.target.value;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      alert('A name was submitted: ' + this.state.value);\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        name: \"name\",\n        type: \"text\",\n        value: this.state.name,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"is it a good beer?:\", React.createElement(\"select\", {\n        name: \"isGood\",\n        value: this.state.isGood,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"delicious\"), React.createElement(\"option\", {\n        value: \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"just crap\"))), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BeerAdd;\n}(React.Component);\n\nexport default BeerAdd;","map":{"version":3,"sources":["/home/jochen/theglue/clientbootiful/src/beer/BeerAdd.js"],"names":["React","BeerAdd","props","state","name","isGood","handleChange","bind","handleSubmit","event","target","value","setState","alert","preventDefault","Component"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;IAGMC,O;;;;;AAEJ,mBAAYC,KAAZ,EAAkC;AAAA;;AAAA;;AAChC,iFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAKA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,uDAApB;AATgC;AAUjC;;;;iCAEYE,K,EAAO;AAChB,UAAML,IAAI,GAAGK,KAAK,CAACC,MAAN,CAAaN,IAA1B;AACA,UAAMO,KAAK,GAAGF,KAAK,CAACC,MAAN,CAAaC,KAA3B;AACA,WAAKC,QAAL,qBAAgBR,IAAhB,EAAuBO,KAAvB;AACH;;;iCAEYF,K,EAAO;AAClBI,MAAAA,KAAK,CAAC,2BAA2B,KAAKV,KAAL,CAAWQ,KAAvC,CAAL;AACAF,MAAAA,KAAK,CAACK,cAAN;AACD;;;6BAEQ;AACP,aACE;AAAM,QAAA,QAAQ,EAAE,KAAKN,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,IAAjD;AAAuD,QAAA,QAAQ,EAAE,KAAKE,YAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,MAAxC;AAAgD,QAAA,QAAQ,EAAE,KAAKC,YAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,EAEC;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFD,CAFF,CANF,EAaE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,CADF;AAiBD;;;;EA3CmBN,KAAK,CAACe,S;;AA8C5B,eAAed,OAAf","sourcesContent":["import * as React from 'react';\n\n\nclass BeerAdd extends React.Component{\n\n  constructor(props : BeerAddProps) {\n    super(props);\n\n    this.state = {\n      name: '',\n      isGood: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState({[name]: value});\n  }\n\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name:\n          <input name=\"name\" type=\"text\" value={this.state.name} onChange={this.handleChange} />\n        </label>\n        <br />\n        <label>\n          is it a good beer?:\n          <select name=\"isGood\" value={this.state.isGood} onChange={this.handleChange}>\n           <option value=\"true\">delicious</option>\n           <option value=\"false\">just crap</option>\n         </select>\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\nexport default BeerAdd;\n"]},"metadata":{},"sourceType":"module"}